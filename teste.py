# from core.bytes import Bytes
# from game.message.S.S_LOGIN import S_LOGIN
#
# b = Bytes([0x22, 0x01, 0x38, 0x01, 0x20, 0x00, 0x58, 0x01, 0x40, 0x00, 0x63, 0x2b, 0x00, 0x00, 0x65, 0x73, 0xa4, 0x0f, 0x00, 0x80, 0x00, 0x02, 0xa4, 0x0f, 0x00, 0x00, 0xe0, 0x78, 0x4c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x00, 0x6e, 0x00, 0x00, 0x00, 0x65, 0x0a, 0x06, 0x01, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x55, 0x8e, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x6f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x8b, 0xf5, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1d, 0x58, 0x00, 0x00, 0xc5, 0x7a, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x00, 0x00, 0xaf, 0xde, 0x00, 0x00, 0x03, 0x3d, 0x00, 0x00, 0x04, 0x3d, 0x00, 0x00, 0x05, 0x3d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfb, 0x76, 0xdd, 0x13, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x64, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x4b, 0x00, 0x70, 0x00, 0x65, 0x00, 0x74, 0x00, 0x61, 0x00, 0x2e, 0x00, 0x43, 0x00, 0x75, 0x00, 0x72, 0x00, 0x61, 0x00, 0x00, 0x00, 0x1f, 0x1f, 0x1f, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x1b, 0x07, 0x00, 0x1f, 0x1f, 0x00, 0x00, 0x12, 0x03, 0x00, 0x05, 0x1e, 0x16, 0x07, 0x00, 0x0c, 0x00, 0x1f, 0x00, 0x14, 0x18, 0x00, 0x00, 0x01, 0x13, 0x10, 0x13, 0x13, 0x10, 0x13, 0x13, 0x13, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x10, 0x13, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00])
# test = S_LOGIN(None, None, None, None, b, None)

# from game.services.hot_dot_database import HotDotDatabase
# test = HotDotDatabase('NA')
#
# from game.services.npc_database import NpcDatabase
# test = NpcDatabase('NA')
#
from game.services.skill_database import SkillDatabase
from util.enums import PlayerClass
test = SkillDatabase('NA')
test2 = SkillDatabase()

print(test.get((180300, PlayerClass(7))))

# from game.services.abnormal_database import AbnormalDatabase
# test = AbnormalDatabase()


# print eval('game.message.server.S_LOGIN')
# print(game.message.server.S_LOGIN)
# print(eval('log.S_LOGIN'))
# s = 4
# seq = []
# for i in xrange(0, b.len() - s + 1):
#     seq1 = b[i:i + 4]
#     count = 0
#     for j in xrange(0, b.len() - s + 1):
#         seq2 = b[i:i + 4]
#
#     print(Bytes(b[i:i + 4]))
# from game.message.server.S_EACH_SKILL_RESULT import S_EACH_SKILL_RESULT
# from util import tipo
#
#
# data = Bytes([1, 2, 3, 4, 5])
#
# print(str(S_EACH_SKILL_RESULT).split('.')[3])
# import sys
# from PyQt4.QtCore import QSize, Qt
# from PyQt4.QtGui import QMainWindow, QStyle, qApp, QApplication
#
# class mymainwindow(QMainWindow):
#     def __init__(self):
#         QMainWindow.__init__(self)
#         self.setWindowFlags(Qt.WindowStaysOnTopHint | Qt.FramelessWindowHint | Qt.X11BypassWindowManagerHint)
#         self.setWindowOpacity(0.5)
#         self.setGeometry(QStyle.alignedRect(Qt.LeftToRight, Qt.AlignCenter, QSize(300, 50), qApp.desktop().availableGeometry()))
#
#     def mousePressEvent(self, event):
#         qApp.quit()
#
# app = QApplication(sys.argv)
# mywindow = mymainwindow()
# mywindow.show()
# app.exec_()
